<!doctype html>
<html>
  <head>
    <style>
      body {
        position: relative;
      }
      table, header {
        width: 1200px;
        margin: auto auto 25px auto;
      }
      td {
        padding: 10px;
        border-left: 1px solid rgba(0,0,0,0.2);
      }
      td:last-child {
        border-right: 1px solid rgba(0,0,0,0.2);
      }
      tr {
        border-bottom: 1px solid rgba(0,0,0,0.5);
      }
      tr:first-child {
        border-top: 1px solid rgba(0,0,0,0.5);
      }
      tr:nth-child(even) {
        background: rgba(0,0,255,0.05);
      }
      #filter {
        padding: 5px;
        font-size: 14px;
        height: 40px;
        line-height: 40px;
        width: 300px;
        display: block;
        border: 1px solid rgba(0,0,0,0.3);
        border-radius: 10px;
      }

      #backdrop, #modal {
        display: none;
        position: fixed;
      }
      body.hasModal #backdrop, body.hasModal #modal {
        display: block;
      }
      #backdrop {
        top: 0; left: 0; right: 0; bottom: 0;
        background: rgba(0,0,0,0.5);
      }
      #modal {
        top: 150px;
        left: 150px;
        right: 150px;
        bottom: 150px;
        background: white;
        box-shadow: 0px 2px 4px rgba(0,0,0,0.5);
        border: 1px solid black;
        border-radius: 10px;
        padding: 10px;
      }
      #modal-details {
        position: absolute;
        top: 100px;
        left: 10px;
        right: 10px;
        bottom: 10px;
        width: 98%;
      }
    </style>
  </head>
  <body>
    <header>
      <h1>TaskBox Task Monitor</h1>
      <input type="search" placeholder="filter by name" id="filter" incremental>
    </header>

    <table>
      <tr><th>task</th><th>status</th><th>next</th><th>last</th><th>last end</th><th>last elapsed</th><th>last status</th></tr>
      {{#each report}}
      <tr data-id={{id}} data-last-details="{{lastDetails}}">
        <td>{{id}}</td>
        <td>{{status}}</td>
        <td>{{{nextPretty}}}<br/><a href="#run-now" class="run-now" data-id="{{id}}">Run Now</a></td>
        <td>{{{lastPretty}}}</td>
        <td>{{{lastEndPretty}}}</td>
        <td>{{lastElapsed}}</td>
        <td><a href="#details" class="details-link" data-id="{{id}}">{{lastStatus}}</td>
      </tr>
      {{/each}}
    </table>

    <div id="backdrop"></div>
    <div id="modal">
      <h1 id="modal-task"></h1>
      <textarea id="modal-details"></textarea>
    </div>

    <script>
      var filter = document.getElementById("filter");
      var backdrop = document.getElementById("backdrop");
      var modal = document.getElementById("modal");
      var modalTask = document.getElementById("modal-task");
      var modalDeets = document.getElementById("modal-details");
      var rows = Array.from(document.querySelectorAll("tr"));

      filter.addEventListener("search", filterList);
      backdrop.addEventListener("click", closeModal);

      rows.forEach(function(tr) {
        var runLink = tr.querySelector("a.run-now");
        var detailsLink = tr.querySelector("a.details-link");
        var detailsInfo = tr.getAttribute("data-last-details");
        var taskId = tr.getAttribute("data-id");
        if (!taskId) return;
        detailsLink.addEventListener("click", function(event) {
          event.preventDefault();
          modalTask.innerText = taskId + " last run result";
          modalDeets.innerHTML = detailsInfo;
          document.body.className = "hasModal";
        });
        runLink.addEventListener("click", function(event) {
          event.preventDefault();
          runLink.style.display = "none";
          var xhr = new XMLHttpRequest();

          xhr.onreadystatechange = function () {
            var DONE = 4;
            var OK = 200;
            if (xhr.readyState === DONE) {
              runLink.style.display = "inline";
              if (xhr.status === OK) {
                alert("Task was started. refresh the page for new status.");
              } else {
                alert("Task run error");
              }
            }
          };

          xhr.open("GET", "/start?"+taskId);
          xhr.send(null);
        });
      });

      function closeModal(event) {
        event.preventDefault();
        document.body.className = "";
      }

      function filterList(event) {
        var values = (filter.value || "").split(" ").filter(function(x) { return !!x.length; });
        var els = document.querySelectorAll("tr");
        rows.forEach(function(tr) {
          var id = tr.getAttribute("data-id");
          if (id) {
            if (values.length === 0) {
              tr.style.display = "table-row";
              return;
            }
            var display = "table-row";
            values.forEach(function(v) {
              if (id.indexOf(v) === -1) display = "none";
            });
            tr.style.display = display;
          }
        });
      }
    </script>

  </body>

</html>
