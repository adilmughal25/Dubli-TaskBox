var ElasticSearchClient = require(__basedir + "src/utils/elastic-search-client");
var aws = require('aws-sdk');
describe.skip('elastic-search-client', function(){
  var sandbox;
  var config;

  var requests = [];
  var responses = [];

  beforeEach(function(){
    sandbox = sinon.sandbox.create();
    config = {
      region: 'us-east-1',
      endpoint: 'example.com/foo'
    };
  });

  afterEach(function(){
    sandbox.restore();
  });

  function _createClient(){
    var client = new ElasticSearchClient(config);
    sandbox.stub(client.client, 'handleRequest', _handleRequest);
    return client;
  }

  function _handleRequest(req, httpOptions, callback){
    requests.push(req);
    var response = responses.shift();
    var callbacks = {};
    var emitter = {
      on: function(key, callback){
        callbacks[key] = callback;
      }
    };
    callback(emitter);
    callbacks.headers.apply(null, response.headers);
    callbacks.data.apply(null, response.data);
    callbacks.end();
  }

  function _addResponse(body, statusCode, headers){
    responses.push({
      data: body ? [body] : [],
      headers: [statusCode || 200, headers]
    });
  }

  describe('getIndices', function(){
    it('should return an array of indices', function(done){
      co(function*(){
        var data = require('fs').readFileSync(__basedir + "/test/resources/indices.txt").toString();

        _addResponse(data);

        var client = _createClient();
        var indices = yield client.getIndices();

        expect(indices.length).to.equal(7, 'incorrect number of elements');
      }).then(() => done()).catch(err => done(err));
    });
  });
});