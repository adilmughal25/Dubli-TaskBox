'use strict';

const toQueryString = require('../utils/url').toQueryString;
const helpers = require('./helpers');

let dataClient;

module.exports = function init (configs) {
  dataClient = require('../utils').getDataClient(configs.data_api.internalUrl, configs.data_api.auth);
  return {
    getPending: getPendingOutclicks,
    createFeedback: createFeedback,
    updateFeedback: updateFeedback
  };
};

function * getPendingOutclicks (userId, lang, region, bypassCache, ctx) {
  let result = yield dataClient.get(helpers.setRequestPayload('/getPendingOutclicks/' + userId + '/' + toQueryString({
      lang: lang,
      region: region,
      bypass: bypassCache
    }), ctx));
  ctx.assert(result.statusCode === 200, 500, 'Unexpected result from data service during getPendingOutclicks', {
    res: result,
    userId: userId,
    internalCode: 351
  });
  return result.body;
}

function * createFeedback (outclickId, userId, merchantId, orderNumber, feedback, ctx) {
  let result = yield dataClient.post(helpers.setRequestPayload('/createOutclickFeedback/', ctx, {
    outclick_id: outclickId,
    user_id: userId,
    merchant_id: merchantId,
    order_number: orderNumber,
    feedback: feedback
  }));
  ctx.assert(result.statusCode !== 404, 404, 'Outclick not found', {
    outclickId: outclickId,
    user_id: userId,
    merchant_id: merchantId
  });
  if (result.body && result.body.code === 'ER_DUP_ENTRY') {
    ctx.throw(409, 'Feedback entry already exists for this outclick.', {
      duplicateKey: true,
      duplicateMsg: result.body.message
    });
  }
  ctx.assert(result.statusCode === 201, 500, 'Unexpected result from data service during createFeedback', {
    res: result,
    outclickId: outclickId,
    internalCode: 351
  });
  return result.body;
}

function * updateFeedback (outclickId, orderNumber, feedback, ctx) {
  let result = yield dataClient.put(helpers.setRequestPayload('/updateOutclickFeedback/', ctx, {
    outclick_id: outclickId,
    order_number: orderNumber,
    feedback: feedback
  }));
  ctx.assert(result.statusCode === 204, 500, 'Unexpected result from data service during updateFeedback', {
    res: result,
    outclickId: outclickId,
    internalCode: 351
  });
  return result.body;
}
