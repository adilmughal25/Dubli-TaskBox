'use strict';

const Decimal = require('decimal');
const toQueryString = require('../utils/url').toQueryString;

let dataClient;

function * getCurrencyOptions (ctx) {
  let result = yield dataClient.get('/getCurrencyOptions/', null, ctx);
  ctx.assert(result.body && result.body.currencies, 400, 'No currency options found in the database', {
    res: result,
    internalCode: 351
  });
  return result.body.currencies;
}

function * getCurrencies (ctx) {
  let result = yield dataClient.get('/getCurrencies/',null, ctx);
  ctx.assert(result.body, 400, 'No currencies found', {
    res: result,
    internalCode: 351
  });
  return result.body;
}

function * getCurrencyConversions (params,ctx) {
  let result = yield dataClient.get('/getCurrencyConversions/'+ toQueryString(params), ctx);
  ctx.assert(result.body, 400, 'No currencies found', {
    res: result,
    internalCode: 351
  });
  return result.body;
}

function * getCurrencyConversionRate (from, to, ctx) {
  let params = {
    from: from.toString().toLowerCase(),
    to: to.toString().toLowerCase()
  };
  let result = yield dataClient.get('/getConversionRate/', params, ctx);

  ctx.assert(result.statusCode === 200 && result.body && result.body.rate, 400, 'No currency conversion rate found in the database', {
    res: result,
    fromCurrency: from,
    toCurrency: to,
    internalCode: 170
  });

  return Decimal(result.body.rate).toNumber();
}

function * incrementCurrencyLambdaCount (ctx) {
  var res = yield dataClient.post('/incrementCurrencyLambdaCount/', null, ctx);
  return res.body;
}

function * updateCurrencyRates (arrayOfRates, ctx) {
  var res = yield dataClient.patch('/updateCurrencyRates/', arrayOfRates, ctx);
  return res.body;
}

function * resetCurrencyLambdaCount (ctx) {
  var res = yield dataClient.post('/resetCurrencyLambdaCount/', null, ctx);
  return res.body;
}

function * convertCurrencies(currencies, ctx){
  var result = yield dataClient.post('/convertCurrencies', currencies, ctx);
  ctx.assert(result.statusCode === 200, 400, 'Error when converting currencies', {
    res: result,
    currencies: currencies
  });
  return result.body;
}

module.exports = function init (config) {
  dataClient = require('../utils/rest-client')(config.data_api, false);
  return {
    convertCurrencies: convertCurrencies,
    getCurrencyConversions: getCurrencyConversions,
    getCurrencyOptions: getCurrencyOptions,
    getCurrencies: getCurrencies,
    getCurrencyConversionRate: getCurrencyConversionRate,
    incrementCurrencyLambdaCount: incrementCurrencyLambdaCount,
    updateCurrencyRates: updateCurrencyRates,
    resetCurrencyLambdaCount: resetCurrencyLambdaCount
  };
};
