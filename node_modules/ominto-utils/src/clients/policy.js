'use strict';
const sanitize = require('../utils/sanitize').nullAndUndefined;
const _ = require('lodash');
let dataClient;

function * getPolicies (ids, bypassCache, ctx) {
  let result = yield dataClient.get('/getPolicies/', {ids: ids, bypass: bypassCache}, ctx);
  ctx.assert(result.statusCode !== 404, 404, 'No Policies Found', {internalCode: 180});
  ctx.assert(result.statusCode === 200, 500, 'Unexpected result from data service during getAvailablePoliciesForUser', {
    res: result,
    ids: ids,
    internalCode: 351
  });
  return result.body;
}

function * getMostRecentPolicy (whitelabel, type, lang, category, bypassCache, ctx) {
  let queryString = sanitize({
    whitelabel: whitelabel,
    type: type,
    lang: lang,
    category: category,
    bypass: bypassCache
  });

  let result = yield dataClient.get('/getMostRecentPolicy/', queryString, ctx);
  ctx.assert(!_.isEmpty(result.body), 404, 'No Policies Found', {internalCode: 180});
  ctx.assert(result.statusCode === 200, 500, 'Unexpected result from data service during getAvailablePoliciesForUser', {
    res: result,
    queryString: queryString,
    internalCode: 351
  });
  return result.body;
}


module.exports = function init (config) {
  dataClient = require('../utils/rest-client')(config.data_api, false);
  return {
    getPolicies: getPolicies,
    getMostRecentPolicy: getMostRecentPolicy
  };
};
