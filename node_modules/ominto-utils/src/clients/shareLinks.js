'use strict';

let dataClient;

function * createShareLink (userId, name, description, params, ctx) {
  let result = yield dataClient.post('/createShareLink/', {
    user_id: userId,
    name: name,
    description: description,
    params: params
  }, ctx);
  if (result.body && result.body.code === 'ER_DUP_ENTRY') {
    ctx.throw(400, 'Referral params are already in use. Please use a unique combination.', {
      internalCode: 52,
      duplicateKey: true
    });
  }
  ctx.assert(result.statusCode === 201, 500, 'Unknown error occurred', {res: result, internalCode: 351});
  return result.body;
}

function * incrShareLink (linkId, ctx) {
  let result = yield dataClient.post('/incrShareLink/' + linkId + '/', null, ctx);
  ctx.assert(result.statusCode !== 404, 404, 'Link not found', {internalCode: 351});
}

function * incrShareLinkByHash (userId, hash, params, ctx) {
  yield dataClient.post('/incrShareLinkByHash/', {userId: userId, hash: hash, params: params}, ctx);
}

function * getLinkById (linkId, ctx) {
  let result = yield dataClient.get('/getLinkById/' + linkId + '/', null, ctx);
  ctx.assert(result.statusCode !== 404, 404, 'Link not found', {internalCode: 351});
  return result.body;
}

function * getShareLinksForUser (userId, ctx, start, end) {
  let result = yield dataClient.get('/getShareLinksForUser/' + userId + '/', {start: start, end: end}, ctx);
  return result.body;
}

module.exports = function init (config) {
  dataClient = require('../utils/rest-client')(config.data_api, false);
  return {
    createShareLink: createShareLink,
    incrShareLink: incrShareLink,
    incrShareLinkByHash: incrShareLinkByHash,
    getShareLinksForUser: getShareLinksForUser,
    getLinkById: getLinkById
  };
};
