'use strict';

var Joi = require('joi');
const common = require('../common');

// OUTPUT VALIDATIONS

var _merchantAssets = Joi.object().keys({
  logo: common.asset.description("Asset object which holds information for the merchant's logo image"),
  cover: common.asset.description("Asset object which holds information for the merchant's cover image"),
  hero: common.asset.description("Asset object which holds information for the merchant's hero image")
});

var dealViewModel = Joi.object().keys({
  id: common.id,
  url: Joi.string().description('Ominto API URL which serves as the redirect link for this deal'),
  siteUrl: Joi.string().description("The whitelabel-specific URL to view this deal's website"),
  name: Joi.string().description('Display-friendly name of the deal'),
  description: Joi.string().description('Brief description of the deal'),
  exceptions: Joi.string().description('Shopping exceptions and restrictions for this deal'),
  code: Joi.string().description('Contains a coupon code if this deal requires one to be entered on the merchant site'),
  type: Joi.string().valid('deal', 'coupon').insensitive().description("Field for simple check whether deal is a 'coupon' or not"),
  startDate: Joi.string().description('Timestamp when the deal becomes active'),
  endDate: Joi.string().description('Timestamp when the deal expires'),
  merchantId: common.id,
  merchantName: Joi.string().description('Display-friendly name of the merchant who owns this deal'),
  merchantAssets: _merchantAssets.description('An object holding all of the available image asset objects and their details')
}).unknown(true);

var dealSimpleModel = Joi.object().keys({
  id: common.id,
  merchantId: common.id,
  url: Joi.string().description('Ominto API URL which serves as the redirect link for this deal'),
  name: Joi.string().description('Display-friendly name of the deal'),
  description: Joi.string().description('Brief description of the deal'),
  exceptions: Joi.string().description('Shopping exceptions and restrictions for this deal'),
  code: Joi.string().description('Contains a coupon code if this deal requires one to be entered on the merchant site'),
  type: Joi.string().valid('deal', 'coupon').insensitive().description("Field for simple check whether deal is a 'coupon' or not"),
  startDate: Joi.string().description('Timestamp when the deal becomes active'),
  endDate: Joi.string().description('Timestamp when the deal expires')
}).unknown(true);

var dealViewModelOutput = Joi.object().keys({
  meta: Joi.object().unknown(true).description('A dynamic object containing metadata on the request/response'),
  deals: Joi.array().items(dealViewModel).description('An array of deal objects')
});

module.exports = {
  dealViewModel: dealViewModel,
  dealSimpleModel: dealSimpleModel,
  dealViewModelOutput: dealViewModelOutput
};
