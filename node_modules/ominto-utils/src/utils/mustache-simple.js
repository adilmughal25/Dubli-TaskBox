'use strict';

const _ = require('lodash');
const strip = require('striptags');
const mustacheRegex = /\{?\{\{\s*(.*?)\s*\}\}\}?/g;

const htmlFields = ['description', 'details', 'exceptions'];

function mustacheMe (template, data) {
  if (!_.isString(template) || !_.isObject(data)) {
    return template;
  }

  return template.replace(mustacheRegex, function (matched, replacementKey) {
    return _.get(data, replacementKey);
  });
}

function _replaceAndStrip (template, data, isMobile) {
  template = mustacheMe(template, data);
  return isMobile ? strip(template) : template;
}

// this function will replace all mustache-style strings in the specified array
// then strip the html tags from those fields if the request is for mobile
function viewModelMagic (viewModel, data, isMobile) {
  for (var i = 0; i < htmlFields.length; i++) {
    if (viewModel[htmlFields[i]]) {
      viewModel[htmlFields[i]] = _replaceAndStrip(viewModel[htmlFields[i]], data, isMobile);
    }
  }
  return viewModel;
}

module.exports = {
  replace: mustacheMe,
  viewModelMagic: viewModelMagic
};
