"use strict";

const _ = require('lodash');

function mergeWhitelabelInfo(cfg, defaults) {
  return _.extend({}, defaults, cfg, function(cur, val) {
    if (_.isString(val)) return val;
    if (_.isArray(val)) return val;
    if (_.isObject(val)) return _.extend({}, cur, val);
    return val;
  });
}

function whitelabelInfoByDomain(configs, domain) {
  const W = configs.whitelabel;
  const list = Object.keys(W).filter(x => x !== 'defaults');
  for (let i = 0; i < list.length; i++) {
    const entry = W[list[i]];
    const alts = entry['domain-alts'] || [];
    if (entry.domain === domain || alts.indexOf(domain) > -1) {
      return mergeWhitelabelInfo(entry, W.defaults);
    }
  }

  return null;
}

function whitelabelInfoByName(configs, name) {
  const W = configs.whitelabel;
  if (W[name]) return mergeWhitelabelInfo(W[name], W.defaults);

  return null;
}

module.exports = {
  whitelabelInfoByDomain: whitelabelInfoByDomain,
  whitelabelInfoByName: whitelabelInfoByName
};
