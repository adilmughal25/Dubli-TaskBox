'use strict';

var request = require('request-promise');

function getDataClient (baseUrl, dataAuth) {
  var options = {
    baseUrl: baseUrl,
    json: true,
    simple: false,
    resolveWithFullResponse: true,
    time: true,
    forever: true
  };
  if (dataAuth) {
    options.auth = dataAuth;
  }
  return _augmentRequest(request.defaults(options));
}

function _augmentRequest (request) {
  if (!request.withIdHeaders) {
    var defaults = request.defaults;
    request.defaults = function () {
      return _augmentRequest(defaults.apply(this, arguments));
    };
    request.withIdHeaders = withIdHeaders;
  }
  return request;
}

function withIdHeaders (ctx) {
  return ctx && ctx.state && ctx.state.logger && ctx.state.logger.fields ? this.defaults({
    headers: {
      'X-Request-Id': ctx.state.logger.fields.req_id,
      'X-Session-Id': ctx.state.logger.fields.session_id
    }
  }) : this;
}

module.exports = getDataClient;
