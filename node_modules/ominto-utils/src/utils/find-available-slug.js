'use strict';

var debug = require('debug')('utils:find-available-slug');
var co = require('co');

function * findAvailableSlug (o_dataClient, s_slugType, s_nameString) {
  var s_baseSlug = s_nameString.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-+|-+$)/g, '');
  var s_slugDomain = 'slug-registry:' + s_slugType;
  var count = 0;
  var append = '';
  var cur, url, params, getResult, putResult;
  debug('finding url slug %s -> %s', s_slugDomain, s_baseSlug);
  while (++count < 1000) {
    cur = s_baseSlug + append;
    url = '/key/' + s_slugDomain;
    params = {url: url, body: {value: cur}};
    getResult = yield o_dataClient.get(params); // check existence
    debug('exists %s -> %s: %s', s_slugDomain, cur, getResult.statusCode);
    if (getResult.statusCode === 404) { // it's available
      putResult = yield o_dataClient.put(params); // try to reserve
      debug('save %s -> %s: %s', s_slugDomain, cur, putResult.statusCode);
      if (putResult.statusCode === 201) { // we reserved it
        return cur;
      }
    }
    append = '-' + (Math.random() * 1000000 | 0).toString();
  }
  throw new Error('Reached maximum number of tries to find a slug :(');
}

module.exports = co.wrap(findAvailableSlug);
