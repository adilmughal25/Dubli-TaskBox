'use strict';

var _ = require('lodash');
var uuid = require('node-uuid');

var path = '/submitEvent/metrics/';

function MetricsClient (dataService) {
  if (this.constructor !== MetricsClient) {
    return new MetricsClient(dataService);
  }
  if (!dataService) {
    throw new Error('You must provide a dataService to MetricsClient on construction');
  }
  this.dataService = dataService;
}

function _request (metricsClient, jwt, type, data) {
  var body = {
    id: uuid.v4(),
    timestamp: new Date().toString(),
    type: type,
    jwt: jwt,
    data: data
  };
  var options = {
    uri: path,
    body: body
  };
  return metricsClient.dataService.put(options);
}

MetricsClient.prototype.record = function (jwt, event, data) {
  var payload = _.clone(data);
  payload._event = event;
  return _request(this, jwt, 'metrics:record', payload);
};

MetricsClient.prototype.setProperty = function (jwt, properties) {
  return _request(this, jwt, 'metrics:set_property', properties);
};

MetricsClient.prototype.alias = function (jwt, alias) {
  return _request(this, jwt, 'metrics:alias', {alias: alias});
};

module.exports = MetricsClient;
